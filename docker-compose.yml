version: '3'
services:
  web:
    build:
      context: ./weather_reminder
    image: wrapi_image
    container_name: wrapi_container
    command: >
      bash -c "python manage.py migrate && python manage.py create_periods && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./weather_reminder:/weather_reminder
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - wrapi_network

  celery_worker:
    build:
      context: ./weather_reminder
    image: wrapi_image
    container_name: celery_worker_container
    command: >
      bash -c "celery -A base worker --loglevel=info -P eventlet"
    volumes:
      - ./weather_reminder:/weather_reminder
    depends_on:
      - db
      - redis
      - web
    networks:
      - wrapi_network

  celery_beat:
    build:
      context: ./weather_reminder
    image: wrapi_image
    container_name: celery_beat_container
    command: >
      bash -c "celery -A base beat --loglevel=info"
    volumes:
      - ./weather_reminder:/weather_reminder
    depends_on:
      - db
      - redis
      - web
      - celery_worker
    networks:
      - wrapi_network

  flower:
    build:
      context: ./flower/
    image: flower2
    container_name: flower_container
    command: >
      bash -c "celery --broker=redis://wrapi_redis:6379/0 flower --port=5555"
    volumes:
      - ./weather_reminder:/weather_reminder
    depends_on:
      - db
      - redis
      - web
      - celery_worker
      - celery_beat
    ports:
      - "5555:5555"
    networks:
      - wrapi_network

  db:
    image: postgres:15.3
    container_name: wrapi_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - wrapi_network

  redis:
    image: redis:7-alpine
    container_name: wrapi_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - wrapi_network

  nginx:
    image: nginx:latest
    container_name: wrapi_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/:/etc/nginx/conf.d
    depends_on:
      - web
    networks:
      - wrapi_network

volumes:
  postgres_data:
  redis_data:

networks:
  wrapi_network:
    driver: bridge
